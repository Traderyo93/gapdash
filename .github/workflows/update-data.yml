name: Update Gapper Data

on:
  schedule:
    # Runs at 9 PM UK time (4 PM EST) 
    - cron: '0 21 * * *'
  workflow_dispatch: # Allows manual trigger

jobs:
  update-data:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # Increased timeout for detailed data processing
    
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install pandas numpy requests pytz
    
    - name: Run detailed data collector
      env:
        POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
      run: |
        python update_data.py
      timeout-minutes: 100  # Specific timeout for data collection
    
    - name: Check if data file was created
      run: |
        if [ -f "data/gap_data_cache.json" ]; then
          echo "‚úÖ Data file created successfully"
          ls -la data/
          echo "üìÅ File size: $(du -h data/gap_data_cache.json)"
          
          # Check if file has reasonable content
          if [ $(wc -c < "data/gap_data_cache.json") -gt 1000 ]; then
            echo "‚úÖ Data file has sufficient content"
            head -20 data/gap_data_cache.json
          else
            echo "‚ùå WARNING: Data file seems too small"
            cat data/gap_data_cache.json
          fi
        else
          echo "‚ùå ERROR: Data file was not created"
          exit 1
        fi
    
    - name: Validate JSON structure
      run: |
        python -c "
        import json
        with open('data/gap_data_cache.json', 'r') as f:
            data = json.load(f)
        print('‚úÖ JSON is valid')
        print(f'üìä Time periods: {list(data.get(\"timePeriodsData\", {}).keys())}')
        print(f'üìà Total gappers: {data.get(\"totalGappers\", 0)}')
        print(f'üìÖ Last updated: {data.get(\"lastUpdated\", \"Unknown\")}')
        "
    
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/gap_data_cache.json
        
        if git diff --staged --quiet; then
          echo "üìù No changes to commit"
        else
          git commit -m "Update detailed intraday gapper data $(date)"
          
          # Retry logic for push conflicts
          for i in {1..5}; do
            if git push; then
              echo "‚úÖ Successfully pushed changes"
              break
            else
              echo "‚ö†Ô∏è Push failed on attempt $i, retrying..."
              git pull origin main --rebase --strategy-option=ours
              sleep 5
            fi
          done
        fi
